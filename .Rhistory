install.packages("cron")
<<<<<<< HEAD
data = read.csv('./Day 14, 15, 21 - 24/dap_for_analysis.csv')
setwd("F:/Internship Documents/Smart-Charging")
chain_type = c('activity', 'tour', 'trip')
density_type = c('condensed', 'non_condensed')
chain_type = c('activity', 'tour', 'trip')
density_type = c('condensed', 'non_condensed')
personal_attributes = c('sex', 'age', 'enrollment', 'license', 'occupation')
household_attributes = c('hh_income', 'hh_size')
attributes = c(personal_attributes, household_attributes)
library(dplyr)
library(nnet)
library(mlogit)
require(foreign)
require(nnet)
require(ggplot2)
require(reshape2)
# Non Condensed Daatset Analysis
# df = read.csv(paste0("output/ANALYSIS/", "condensed", "/", "tour", "_", "condensed", "_dummy_df.csv"))
df = read.csv(paste0("output/DAP/", "tour", "_", "condensed", "_df.csv"))
df = mutate_if(df, is.character, as.factor)
summary(df)
chain = paste0("tour", "_chain")
df$activity_chain = relevel(df$activity_chain, ref = "Home>Work>Home")
df$tour_chain = relevel(df$tour_chain, ref = "Home>Work>Home")
=======
setwd("F:/Internship Documents/Smart-Charging")
chain_type = c('activity', 'tour', 'trip')
density_type = c('condensed', 'non_condensed')
library(dplyr)
library(nnet)
library(mlogit)
# Non Condensed Daatset Analysis
# df = read.csv(paste0("output/ANALYSIS/", "condensed", "/", "tour", "_", "condensed", "_dummy_df.csv"))
df = read.csv(paste0("output/DAP/", "tour", "_", "condensed", "_df.csv"))
chain = paste0("tour", "_chain")
# % of the sample size
sample_size <- floor(0.5 * nrow(df))
>>>>>>> remotes/origin/branch_abm
# % of the sample size
sample_size <- floor(0.8 * nrow(df))
set.seed(123)
train_test<- sample(seq_len(nrow(df)), size = sample_size)
train_df <- df[train_test, ]
test_df <- df[-train_test, ]
<<<<<<< HEAD
# df_data = mlogit.data(train_df, choice = chain, shape = "wide")
resp = c(chain)
covar <- attributes[!attributes %in% resp]
# ff <- as.formula(paste(resp, "~", "0", "|", paste(covar, collapse = "+"), "|", "0"))
ff <- as.formula(paste(resp, "~", paste(covar, collapse = "+")))
model = multinom(ff, data = train_df, MaxNWts = 5000, maxit=10000)
summary(model)
summary(model)$coefficients
setwd("F:/Internship Documents/Smart-Charging")
chain_type = c('activity', 'tour', 'trip')
density_type = c('condensed', 'non_condensed')
personal_attributes = c('sex', 'age', 'enrollment', 'license', 'occupation')
household_attributes = c('hh_income', 'hh_size')
attributes = c(personal_attributes, household_attributes)
library(dplyr)
library(nnet)
library(mlogit)
require(foreign)
require(nnet)
require(ggplot2)
require(reshape2)
# Non Condensed Daatset Analysis
df = read.csv(paste0("output/ANALYSIS/", "condensed", "/", "tour", "_", "condensed", "_dummy_df.csv"))
# df = read.csv(paste0("output/DAP/", "tour", "_", "condensed", "_df.csv"))
df = mutate_if(df, is.character, as.factor)
summary(df)
chain = paste0("tour", "_chain")
df$tour_chain = relevel(df$tour_chain, ref = "Home>Work>Home")
# % of the sample size
sample_size <- floor(0.8 * nrow(df))
set.seed(123)
train_test<- sample(seq_len(nrow(df)), size = sample_size)
train_df <- df[train_test, ]
test_df <- df[-train_test, ]
# df_data = mlogit.data(train_df, choice = chain, shape = "wide")
resp = c(chain)
covar <- colnames(train_df)
covar <- colnames(train_df)[-2]
covar <- colnames(train_df)[-2]
covar <- colnames(train_df)[-1:2]
covar <- colnames(train_df)[-1,2]
remover = c(1,2)
covar <- colnames(train_df)[! colnames(train_df) %in% remover]
covar <- colnames(train_df)[! colnames(train_df) %in% remover]
=======
df_data = mlogit.data(train_df, choice = chain, shape = "wide")
View(df_data)
personal_attributes = c('sex', 'age', 'enrollment', 'license', 'occupation')
household_attributes = c('hh_income', 'hh_size')
attributes[] = lapply(attributes, as.character)
attributes = data.frame(personal_attributes, household_attributes)
attributes[] = lapply(attributes, as.character)
household_attributes = c('hh_income', 'hh_size')
attributes = data.frame(personal_attributes, household_attributes)
attributes = data.frame(personal_attributes, household_attributes)
attributes = data.frame(personal_attributes, household_attributes, stringsAsFactors=F)
attributes = c(personal_attributes, household_attributes)
>>>>>>> remotes/origin/branch_abm
setwd("F:/Internship Documents/Smart-Charging")
chain_type = c('activity', 'tour', 'trip')
density_type = c('condensed', 'non_condensed')
personal_attributes = c('sex', 'age', 'enrollment', 'license', 'occupation')
household_attributes = c('hh_income', 'hh_size')
attributes = c(personal_attributes, household_attributes)
library(dplyr)
library(nnet)
library(mlogit)
<<<<<<< HEAD
require(foreign)
require(nnet)
require(ggplot2)
require(reshape2)
# Non Condensed Daatset Analysis
df = read.csv(paste0("output/ANALYSIS/", "condensed", "/", "tour", "_", "condensed", "_dummy_df.csv"))
# df = read.csv(paste0("output/DAP/", "tour", "_", "condensed", "_df.csv"))
df = mutate_if(df, is.character, as.factor)
summary(df)
chain = paste0("tour", "_chain")
df$tour_chain = relevel(df$tour_chain, ref = "Home>Work>Home")
=======
# Non Condensed Daatset Analysis
# df = read.csv(paste0("output/ANALYSIS/", "condensed", "/", "tour", "_", "condensed", "_dummy_df.csv"))
df = read.csv(paste0("output/DAP/", "tour", "_", "condensed", "_df.csv"))
chain = paste0("tour", "_chain")
>>>>>>> remotes/origin/branch_abm
# % of the sample size
sample_size <- floor(0.8 * nrow(df))
set.seed(123)
train_test<- sample(seq_len(nrow(df)), size = sample_size)
train_df <- df[train_test, ]
test_df <- df[-train_test, ]
<<<<<<< HEAD
# df_data = mlogit.data(train_df, choice = chain, shape = "wide")
resp = c(chain)
remover = c(1,2)
covar <- colnames(train_df)[! colnames(train_df) %in% remover]
remover = c("tour_chain", "tour_chain_rank")
covar <- colnames(train_df)[! colnames(train_df) %in% remover]
# covar <- attributes[!attributes %in% resp]
# ff <- as.formula(paste(resp, "~", "0", "|", paste(covar, collapse = "+"), "|", "0"))
ff <- as.formula(paste(resp, "~", paste(covar, collapse = "+")))
model = multinom(ff, data = train_df, MaxNWts = 5000, maxit=10000)
summary(model)$coefficients
library(broom)
z_p_model = tidy(model)
p <- (1 - pnorm(abs(z), 0, 1)) * 2
=======
df_data = mlogit.data(train_df, choice = chain, shape = "wide")
summary(df_data)
resp = c(chain)
covar <- attributes[!attributes %in% resp]
ff <- as.formula(paste(resp, "~", "0", "|", paste(covar, collapse = "+"), "|", "0"))
model = mlogit(ff, data = df_data)
>>>>>>> remotes/origin/branch_abm
